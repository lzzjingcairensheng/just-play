<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.play.game.repository.mysql.mapper.GameInfoMapper">
  <resultMap id="BaseResultMap" type="com.play.game.entity.GameInfo">
    <id column="game_id" jdbcType="INTEGER" property="gameId" />
    <result column="game_name" jdbcType="VARCHAR" property="gameName" />
    <result column="game_type" jdbcType="INTEGER" property="gameType" />
    <result column="game_pic" jdbcType="VARCHAR" property="gamePic" />
    <result column="game_path" jdbcType="VARCHAR" property="gamePath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    game_id, game_name, game_type, game_pic, game_path, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.play.game.repository.mysql.criteria.GameInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from game_info
    where game_id = #{gameId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from game_info
    where game_id = #{gameId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.play.game.repository.mysql.criteria.GameInfoCriteria">
    delete from game_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.play.game.entity.GameInfo">
    insert into game_info (game_id, game_name, game_type, 
      game_pic, game_path, create_time, 
      update_time)
    values (#{gameId,jdbcType=INTEGER}, #{gameName,jdbcType=VARCHAR}, #{gameType,jdbcType=INTEGER}, 
      #{gamePic,jdbcType=VARCHAR}, #{gamePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.play.game.entity.GameInfo">
    insert into game_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gameId != null">
        game_id,
      </if>
      <if test="gameName != null">
        game_name,
      </if>
      <if test="gameType != null">
        game_type,
      </if>
      <if test="gamePic != null">
        game_pic,
      </if>
      <if test="gamePath != null">
        game_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gameId != null">
        #{gameId,jdbcType=INTEGER},
      </if>
      <if test="gameName != null">
        #{gameName,jdbcType=VARCHAR},
      </if>
      <if test="gameType != null">
        #{gameType,jdbcType=INTEGER},
      </if>
      <if test="gamePic != null">
        #{gamePic,jdbcType=VARCHAR},
      </if>
      <if test="gamePath != null">
        #{gamePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.play.game.repository.mysql.criteria.GameInfoCriteria" resultType="java.lang.Long">
    select count(*) from game_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update game_info
    <set>
      <if test="record.gameId != null">
        game_id = #{record.gameId,jdbcType=INTEGER},
      </if>
      <if test="record.gameName != null">
        game_name = #{record.gameName,jdbcType=VARCHAR},
      </if>
      <if test="record.gameType != null">
        game_type = #{record.gameType,jdbcType=INTEGER},
      </if>
      <if test="record.gamePic != null">
        game_pic = #{record.gamePic,jdbcType=VARCHAR},
      </if>
      <if test="record.gamePath != null">
        game_path = #{record.gamePath,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update game_info
    set game_id = #{record.gameId,jdbcType=INTEGER},
      game_name = #{record.gameName,jdbcType=VARCHAR},
      game_type = #{record.gameType,jdbcType=INTEGER},
      game_pic = #{record.gamePic,jdbcType=VARCHAR},
      game_path = #{record.gamePath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.play.game.entity.GameInfo">
    update game_info
    <set>
      <if test="gameName != null">
        game_name = #{gameName,jdbcType=VARCHAR},
      </if>
      <if test="gameType != null">
        game_type = #{gameType,jdbcType=INTEGER},
      </if>
      <if test="gamePic != null">
        game_pic = #{gamePic,jdbcType=VARCHAR},
      </if>
      <if test="gamePath != null">
        game_path = #{gamePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where game_id = #{gameId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.play.game.entity.GameInfo">
    update game_info
    set game_name = #{gameName,jdbcType=VARCHAR},
      game_type = #{gameType,jdbcType=INTEGER},
      game_pic = #{gamePic,jdbcType=VARCHAR},
      game_path = #{gamePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where game_id = #{gameId,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into game_info  (game_id, game_name, game_type, 
        game_pic, game_path, create_time, 
        update_time)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.gameId,jdbcType=INTEGER}, #{item.gameName,jdbcType=VARCHAR}, #{item.gameType,jdbcType=INTEGER}, 
        #{item.gamePic,jdbcType=VARCHAR}, #{item.gamePath,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
      </foreach>
    </if>
  </insert>
  <select id="selectByExampleWithRowbounds" parameterType="com.play.game.repository.mysql.criteria.GameInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
</mapper>